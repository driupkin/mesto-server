{"version":3,"sources":["components/Header.js","components/Footer.js","context/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","utils/Api.js","context/CardsContext.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","type","onClick","onCardDelete","src","link","alt","onCardClick","name","onCardLike","length","Main","id","style","backgroundImage","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","ImagePopup","onClose","Api","url","headers","this","res","ok","json","console","log","Promise","reject","status","err","message","fetch","then","_handleResponse","catch","_handleResponseError","values","method","body","JSON","stringify","apiMe","authorization","apiCards","CardsContext","PopupWithForm","isOpen","action","onSubmit","title","children","buttonName","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","value","onChange","el","target","placeholder","required","minLength","maxLength","EditAvatarPopup","avatarUrlRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","nameRef","linkRef","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getData","data","closeAllPopupsByOverlay","classList","contains","closeAllPopupsByEsc","document","addEventListener","removeEventListener","Provider","deleteLike","putLike","newCard","newCards","c","deleteCard","filter","item","editProfile","addCard","changeAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"kOAUiBA,MARjB,WACI,OACI,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,WCKVC,MARf,WACI,OACI,4BAAQD,UAAU,UACd,uBAAGA,UAAU,qBAAb,4BCJCE,EAAqBC,IAAMC,gBCwCzBC,MAtCf,SAAcC,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAC/BO,EAAQH,EAAMI,KAAKC,MAAMC,MAAQL,EAAYK,IAC7CC,EAAUP,EAAMI,KAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQL,EAAYK,OAWjE,OACI,yBAAKZ,UAAU,WACX,4BACIA,UAAS,yBAAoBS,EAAQ,wBAA0B,IAC/DQ,KAAK,SACLC,QARZ,WACIZ,EAAMa,aAAab,EAAMI,SASrB,yBAAKU,IAAG,UAAKd,EAAMI,KAAKW,MAAQC,IAAI,IAAItB,UAAU,iBAAiBkB,QAhB3E,WACIZ,EAAMiB,YAAYjB,EAAMI,SAgBpB,yBAAKV,UAAU,kBACX,wBAAIA,UAAU,sBAAsBM,EAAMI,KAAKc,MAC/C,yBAAKxB,UAAU,QACX,4BACIA,UAAS,sBAAiBa,EAAU,qBAAuB,IAC3DI,KAAK,SACLC,QApBpB,WACIZ,EAAMmB,WAAWnB,EAAMI,SAsBX,uBAAGV,UAAU,eAAeM,EAAMI,KAAKI,MAAMY,YCKlDC,MAnCf,SAAcrB,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAErC,OACI,0BAAMF,UAAU,WACZ,6BAASA,UAAU,UAAU4B,GAAG,IAC5B,yBAAK5B,UAAU,4BAA4B6B,MAAO,CAAEC,gBAAgB,OAAD,OAASvB,EAAYwB,OAArB,OAC/D,yBAAK/B,UAAU,yBAAyBkB,QAASZ,EAAM0B,gBAE3D,yBAAKhC,UAAU,iBACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,iBAAiBO,EAAYiB,MAC3C,4BAAQP,KAAK,SAASjB,UAAU,uBAAuBkB,QAASZ,EAAM2B,iBAE1E,uBAAGjC,UAAU,qBAAqBO,EAAY2B,QAElD,4BAAQjB,KAAK,SAASjB,UAAU,sBAAsBkB,QAASZ,EAAM6B,cAGzE,6BAASnC,UAAU,YACdM,EAAM8B,MAAMC,KAAI,SAAC3B,EAAMM,GAAP,OACb,kBAAC,EAAD,CACIN,KAAMA,EACNe,WAAYnB,EAAMmB,WAClBF,YAAajB,EAAMiB,YACnBJ,aAAcb,EAAMa,aACpBmB,IAAKtB,UChBduB,MAZf,SAAoBjC,GAChB,OACI,6BAASN,UAAS,4BAAuBM,EAAMI,KAAO,eAAiB,KACnE,yBAAKV,UAAU,0CACX,4BAAQiB,KAAK,SAASC,QAASZ,EAAMkC,QAASxC,UAAU,mCACxD,yBAAKoB,IAAG,UAAKd,EAAMe,MAAQC,IAAI,IAAItB,UAAU,iBAC7C,uBAAGA,UAAU,mBAAmBM,EAAMkB,S,cCR/CiB,E,WACH,cAA+B,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAAW,oBAC1BC,KAAKF,IAAMA,EACXE,KAAKD,QAAUA,E,4DAEHE,GACZ,OAAIA,EAAIC,GACGD,EAAIE,QAEXC,QAAQC,IAAI,6BACLC,QAAQC,OAAR,gDAA0BN,EAAIO,Y,2CAIxBC,GAEjB,OADAL,QAAQC,IAAI,wBACLC,QAAQC,OAAOE,EAAIC,W,gCAG1B,OAAOC,MAAMX,KAAKF,IAAK,CAAEC,QAASC,KAAKD,UAClCa,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,kCAERC,GACR,OAAOL,MAAMX,KAAKF,IAAK,CACnBmB,OAAQ,QACRlB,QAASC,KAAKD,QACdmB,KAAMC,KAAKC,UAAU,CACjBxC,KAAMoC,EAAOpC,KACbU,MAAO0B,EAAO1B,UAGjBsB,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,8BAEZC,GACJ,OAAOL,MAAMX,KAAKF,IAAK,CACnBmB,OAAQ,OACRlB,QAASC,KAAKD,QACdmB,KAAMC,KAAKC,UAAU,CACjBxC,KAAMoC,EAAOpC,KACbH,KAAMuC,EAAOvC,SAGhBmC,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,iCAET/B,GACP,OAAO2B,MAAM,GAAD,OACLX,KAAKF,IADA,YACOd,GACf,CACIe,QAASC,KAAKD,QACdkB,OAAQ,WAEXL,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,8BAEZ/B,GACJ,OAAO2B,MAAM,GAAD,OACLX,KAAKF,IADA,kBACad,GACrB,CACIe,QAASC,KAAKD,QACdkB,OAAQ,QAEXL,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,iCAET/B,GACP,OAAO2B,MAAM,GAAD,OACLX,KAAKF,IADA,kBACad,GACrB,CACIe,QAASC,KAAKD,QACdkB,OAAQ,WAEXL,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,wB,mCAEP5B,GACT,OAAOwB,MAAM,GAAD,OACLX,KAAKF,IADA,WAER,CACImB,OAAQ,QACRlB,QAASC,KAAKD,QACdmB,KAAMC,KAAKC,UAAU,CACjBjC,aAIPyB,KAAKZ,KAAKa,iBACVC,MAAMd,KAAKe,0B,KAIlBM,EAAQ,IAAIxB,EAAI,CAClBC,IAAK,uDACLC,QAAS,CACLuB,cAAe,uCACf,eAAgB,sBAIlBC,EAAW,IAAI1B,EAAI,CACrBC,IAAK,oDACLC,QAAS,CACLuB,cAAe,uCACf,eAAgB,sBCxGXE,EAAejE,IAAMC,gBC8BnBiE,MA7Bf,SAAuB/D,GACnB,OACI,6BAASN,UAAS,sBAAiBM,EAAMkB,KAAvB,YAA+BlB,EAAMgE,OAAS,eAAiB,KAC7E,yBAAKtE,UAAS,4CAAuCM,EAAMkB,OACvD,0BACIxB,UAAS,oBAAeM,EAAMkB,MAC9BA,KAAI,gBAAWlB,EAAMkB,MACrBqC,OAAO,MACPU,OAAO,IACPC,SAAUlE,EAAMkE,UAChB,4BACItD,QAASZ,EAAMkC,QACfvB,KAAK,SACLjB,UAAS,oCAA+BM,EAAMkB,QAElD,wBAAIxB,UAAS,kCAA6BM,EAAMkB,OAASlB,EAAMmE,OAC9DnE,EAAMoE,SACP,4BACIzD,KAAK,SACLjB,UAAS,oCAA+BM,EAAMkB,MAC9CN,QAASZ,EAAMkC,SACdlC,EAAMqE,gBC8ChBC,MAjEf,SAA0BtE,GAAQ,IAAD,EACLH,IAAM0E,SAAS,IADV,mBACtBrD,EADsB,KAChBsD,EADgB,OAES3E,IAAM0E,SAAS,IAFxB,mBAEtBE,EAFsB,KAETC,EAFS,KAGvBzE,EAAcJ,IAAMK,WAAWN,GAyBrC,OAvBAC,IAAM8E,WAAU,WACZH,EAAQvE,EAAYiB,MACpBwD,EAAezE,EAAY2B,SAC5B,CAAC3B,IAqBA,kBAAC,EAAD,CACIiE,SAZR,SAAsBU,GAElBA,EAAEC,iBAGF7E,EAAM8E,aAAa,CACf5D,OACAU,MAAO6C,KAMPT,OAAQhE,EAAMgE,OACd9B,QAASlC,EAAMkC,QACfiC,MAAM,4HACNjD,KAAK,eACLmD,WAAW,yDACXD,SACI,8BAAU1E,UAAU,eAChB,2BACIqF,MAAO7D,EACPA,KAAK,OACL8D,SA/BpB,SAA0BC,GACtBT,EAAQS,EAAGC,OAAOH,QA+BFI,YAAY,gEACZzF,UAAU,+BACViB,KAAK,OACLW,GAAG,aACH8D,UAAQ,EAACC,UAAU,IACnBC,UAAU,OACd,0BAAM5F,UAAU,oBAAoB4B,GAAG,qBACvC,2BACIyD,MAAON,EACPvD,KAAK,cACL8D,SAtCpB,SAAiCC,GAC7BP,EAAeO,EAAGC,OAAOH,QAsCTI,YAAY,mDACZzF,UAAU,sCACV4B,GAAG,oBACHX,KAAK,OACLyE,UAAQ,EAACC,UAAU,IACnBC,UAAU,QACd,0BAAM5F,UAAU,oBAAoB4B,GAAG,gCCzB5CiE,MApCf,SAAyBvF,GACrB,IAAMwF,EAAe3F,IAAM4F,SAS3B,OACI,kBAAC,EAAD,CACIvB,SATR,SAAsBU,GAClBA,EAAEC,iBAEF7E,EAAM0F,eAAe,CACjBjE,OAAQ+D,EAAaG,QAAQZ,SAM7Bf,OAAQhE,EAAMgE,OACd9B,QAASlC,EAAMkC,QACfiC,MAAM,wFACNjD,KAAK,gBACLmD,WAAW,yDACXD,SACI,8BAAU1E,UAAU,eAChB,2BACIkG,IAAKJ,EACLtE,KAAK,SACLiE,YAAY,yFACZzF,UAAU,8BACViB,KAAK,MACLW,GAAG,YACH8D,UAAQ,IAEZ,0BAAM1F,UAAU,oBAAoB4B,GAAG,wBCmB5CuE,MA/Cf,SAAuB7F,GACnB,IAAM8F,EAAUjG,IAAM4F,SAChBM,EAAUlG,IAAM4F,SAStB,OACI,kBAAC,EAAD,CACIvB,SATR,SAAsBU,GAClBA,EAAEC,iBACF7E,EAAM6B,WAAW,CACbX,KAAM4E,EAAQH,QAAQZ,MACtBhE,KAAMgF,EAAQJ,QAAQZ,SAMtBf,OAAQhE,EAAMgE,OACd9B,QAASlC,EAAMkC,QACfiC,MAAM,gEACNjD,KAAK,YACLmD,WAAW,6CACXD,SACI,8BAAU1E,UAAU,gBAChB,2BACIkG,IAAKE,EACL5E,KAAK,OACLiE,YAAY,mDACZzF,UAAU,gCACViB,KAAK,OACLW,GAAG,cACH8D,UAAQ,EACRC,UAAU,IACVC,UAAU,OAEd,0BAAM5F,UAAU,oBAAoB4B,GAAG,sBACvC,2BACIsE,IAAKG,EACL7E,KAAK,OACLiE,YAAY,qGACZzF,UAAU,8BACViB,KAAK,MACLW,GAAG,YACH8D,UAAQ,IAEZ,0BAAM1F,UAAU,oBAAoB4B,GAAG,wBCyI5C0E,MAzKf,WAAgB,IAAD,EAC6CnG,IAAM0E,WADnD,mBACN0B,EADM,KACiBC,EADjB,OAE+CrG,IAAM0E,WAFrD,mBAEN4B,EAFM,KAEkBC,EAFlB,OAGyCvG,IAAM0E,WAH/C,mBAGN8B,EAHM,KAGeC,EAHf,OAI2BzG,IAAM0E,UAAS,GAJ1C,mBAINgC,EAJM,KAIQC,EAJR,OAKyB3G,IAAM0E,SAAS,CACnDrD,KAAM,GACNU,MAAO,GACPH,OAAQ,KARG,mBAKNxB,EALM,KAKOwG,EALP,OAUa5G,IAAM0E,SAAS,IAV5B,mBAUNzC,EAVM,KAUC4E,EAVD,KA+Db,SAASC,IACPT,GAAyB,GACzBE,GAA0B,GAC1BE,GAAuB,GACvBE,GAAgB,GAwDlB,OA/GA3G,IAAM8E,WAAU,WACdhB,EAAMiD,UACH1D,MAAK,SAAA2D,GACJJ,EAAeI,MAEhBzD,OAAM,SAACL,GACNL,QAAQC,IAAII,QAEf,IAEHlD,IAAM8E,WAAU,WACdd,EAAS+C,UACN1D,MAAK,SAAA2D,GACJH,EAASG,MAEVzD,OAAM,SAACL,GACNL,QAAQC,IAAII,QAEf,IAEHlD,IAAM8E,WAAU,WACd,SAASmC,EAAwBlC,GAC3BA,EAAEM,OAAO6B,UAAUC,SAAS,iBAC9BL,IAIJ,SAASM,EAAoBrC,GACb,WAAVA,EAAE5C,KACJ2E,IAIJ,OARAO,SAASC,iBAAiB,YAAaL,GAMvCI,SAASC,iBAAiB,UAAWF,GAE9B,WACLC,SAASE,oBAAoB,YAAaN,GAC1CI,SAASE,oBAAoB,UAAWH,OA6E1C,kBAACrH,EAAmByH,SAApB,CAA6BtC,MAAO9E,GAClC,kBAAC6D,EAAauD,SAAd,CAAuBtC,MAAOjD,GAC5B,yBAAKpC,UAAU,QACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEoC,MAAOA,EACPX,WA7BZ,SAAwBf,IAENA,EAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQL,EAAYK,OAChDuD,EAASyD,WAAWlH,EAAKE,KAAOuD,EAAS0D,QAAQnH,EAAKE,MAC9D4C,MAAK,SAAAsE,GACJ,IAAMC,EAAW3F,EAAMC,KAAI,SAAC2F,GAAD,OAAOA,EAAEpH,MAAQF,EAAKE,IAAMkH,EAAUE,KACjEhB,EAASe,MAEVrE,OAAM,SAACL,GACNL,QAAQC,IAAII,OAqBNlC,aAjBZ,SAA0BT,GACxByD,EAAS8D,WAAWvH,EAAKE,KACtB4C,MAAK,WACJ,IAAMuE,EAAW3F,EAAM8F,QAAO,SAAAC,GAAI,OAAIA,EAAKvH,MAAQF,EAAKE,IAAM,GAAKuH,KACnEnB,EAASe,OAcHxG,YA/DZ,SAAyBb,GACvBoG,EAAgBpG,IA+DNsB,aAnFZ,WACEwE,GAAyB,IAmFfvE,cAhFZ,WACEyE,GAA0B,IAgFhBvE,WA7EZ,WACEyE,GAAuB,IA6EbI,SAAUA,IAEZ,kBAAC,EAAD,OAEF,kBAAC,EAAD,CACE1C,OAAQmC,EACRjE,QAASyE,EACT7B,aAtEV,SAA0BxB,GACxBK,EAAMmE,YAAYxE,GACfJ,MAAK,SAAA2D,GACJJ,EAAeI,MAEhBzD,OAAM,SAACL,GACNL,QAAQC,IAAII,SAkEV,kBAAC,EAAD,CACEiB,OAAQqC,EACRnE,QAASyE,EACT9E,WAvDV,SAA8ByB,GAC5BO,EAASkE,QAAQzE,GACdJ,MAAK,SAAAsE,GAAO,OAAId,EAAS,GAAD,mBAAK5E,GAAL,CAAY0F,QACpCpE,OAAM,SAACL,GACNL,QAAQC,IAAII,SAqDV,kBAAC,EAAD,CACEiB,OAAQiC,EACR/D,QAASyE,EACTjB,eAtEV,SAA4BtD,GAC1BuB,EAAMqE,aAAa5F,EAAIX,QACpByB,MAAK,SAAA2D,GACJJ,EAAeI,MAEhBzD,OAAM,SAACL,GACNL,QAAQC,IAAII,SAmEV,kBAAC,EAAD,CACE3C,KAAMmG,EACNxF,KAAMwF,EAAaxF,KACnBG,KAAMqF,EAAarF,KACnBgB,QAASyE,QClKDsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASuB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1F,MAAK,SAAA2F,GACJA,EAAaC,gBAEd1F,OAAM,SAAA2F,GACLrG,QAAQqG,MAAMA,EAAM/F,a","file":"static/js/main.64bd3d27.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n          <div className=\"logo\"></div>\r\n        </header>\r\n    );\r\n  }\r\n\r\n  export default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n    return (\r\n        <div className=\"element\">\r\n            <button\r\n                className={`element__trash ${isOwn ? 'element__trash_active' : ''}`}\r\n                type=\"button\"\r\n                onClick={handleDeleteClick}>\r\n            </button>\r\n            <img src={`${props.card.link}`} alt=\"#\" className=\"element__image\" onClick={handleClick} />\r\n            <div className=\"element__title\">\r\n                <h2 className=\"element__paragraph\">{props.card.name}</h2>\r\n                <div className=\"like\">\r\n                    <button\r\n                        className={`like__heart ${isLiked ? 'like__heart_active' : ''}`}\r\n                        type=\"button\"\r\n                        onClick={handleLikeClick}\r\n                    >\r\n                    </button>\r\n                    <p className=\"like__count\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);    \r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\" id=\"\">\r\n                <div className=\"profile__avatar_container\" style={{ backgroundImage: `url(${currentUser.avatar})` }}>\r\n                    <div className=\"profile__avatar_change\" onClick={props.onEditAvatar}></div>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__title\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button type=\"button\" className=\"profile__button-edit\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__button-add\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n                {props.cards.map((card, i) => (\r\n                    <Card\r\n                        card={card}\r\n                        onCardLike={props.onCardLike}\r\n                        onCardClick={props.onCardClick}\r\n                        onCardDelete={props.onCardDelete}\r\n                        key={i}\r\n                    />\r\n                ))}\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup popup_cards ${props.card ? 'popup_opened' : ''}`}>\r\n            <div className=\"popup__container popup__container_card\">\r\n                <button type=\"button\" onClick={props.onClose} className=\"popup__close popup__close_card\"></button>\r\n                <img src={`${props.link}`} alt=\"#\" className=\"popup__image\" />\r\n                <p className=\"popup__subtitle\">{props.name}</p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;"," class Api {\r\n    constructor({ url, headers }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n    }\r\n    _handleResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            console.log('_handleResponse rejection')\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        }\r\n    }\r\n\r\n    _handleResponseError(err) {\r\n        console.log('_handleResponseError')\r\n        return Promise.reject(err.message)\r\n    }\r\n    getData() {\r\n        return fetch(this.url, { headers: this.headers })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    editProfile(values) {\r\n        return fetch(this.url, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                about: values.about\r\n            })\r\n        })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    addCard(values) {\r\n        return fetch(this.url, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                link: values.link\r\n            })\r\n        })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    deleteCard(id) {\r\n        return fetch(\r\n            `${this.url}/${id}`,\r\n            {\r\n                headers: this.headers,\r\n                method: 'DELETE',\r\n            })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    putLike(id) {\r\n        return fetch(\r\n            `${this.url}/likes/${id}`,\r\n            {\r\n                headers: this.headers,\r\n                method: 'PUT',\r\n            })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    deleteLike(id) {\r\n        return fetch(\r\n            `${this.url}/likes/${id}`,\r\n            {\r\n                headers: this.headers,\r\n                method: 'DELETE',\r\n            })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n    changeAvatar(avatar) {\r\n        return fetch(\r\n            `${this.url}/avatar`,\r\n            {\r\n                method: 'PATCH',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    avatar\r\n                })\r\n\r\n            })\r\n            .then(this._handleResponse)\r\n            .catch(this._handleResponseError)\r\n    }\r\n}\r\n\r\nconst apiMe = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-13/users/me',\r\n    headers: {\r\n        authorization: '719abc6c-853b-49cf-a6ae-f91d269216f8',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nconst apiCards = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-13/cards',\r\n    headers: {\r\n        authorization: '719abc6c-853b-49cf-a6ae-f91d269216f8',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport {apiMe, apiCards};","import React from 'react';\r\nexport const CardsContext = React.createContext();","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <div className={`popup__container popup__container_${props.name}`}>\r\n                <form\r\n                    className={`form form_${props.name}`}\r\n                    name={`popup_${props.name}`}\r\n                    method=\"GET\"\r\n                    action=\"#\"\r\n                    onSubmit={props.onSubmit} >\r\n                    <button\r\n                        onClick={props.onClose}\r\n                        type=\"button\"\r\n                        className={`popup__close popup__close_${props.name}`}>\r\n                    </button>\r\n                    <h2 className={`form__title form__title_${props.name}`}>{props.title}</h2>\r\n                    {props.children}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`form__button form__button_${props.name}`}\r\n                        onClick={props.onClose}>\r\n                        {props.buttonName}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleChangeName(el) {\r\n        setName(el.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(el) {\r\n        setDescription(el.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            title=\"Редактировать профиль\"\r\n            name=\"edit-profile\"\r\n            buttonName=\"Сохранить\"\r\n            children={\r\n                <fieldset className=\"form__field\">\r\n                    <input\r\n                        value={name}\r\n                        name=\"name\"\r\n                        onChange={handleChangeName}\r\n                        placeholder=\"Имя профиля\"\r\n                        className=\"form__input form__input_name\"\r\n                        type=\"text\"\r\n                        id=\"name-input\"\r\n                        required minLength=\"2\"\r\n                        maxLength=\"40\" />\r\n                    <span className='form__input-error' id='name-input-error'></span>\r\n                    <input\r\n                        value={description}\r\n                        name=\"description\"\r\n                        onChange={handleChangeDescription}\r\n                        placeholder=\"Описание\"\r\n                        className=\"form__input form__input_description\"\r\n                        id=\"description-input\"\r\n                        type=\"text\"\r\n                        required minLength=\"2\"\r\n                        maxLength=\"200\" />\r\n                    <span className='form__input-error' id='description-input-error'></span>\r\n                </fieldset>\r\n            } />\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nfunction EditAvatarPopup(props) {\r\n    const avatarUrlRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarUrlRef.current.value,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            title=\"Обновить аватар\"\r\n            name=\"change-avatar\"\r\n            buttonName=\"Сохранить\"\r\n            children={\r\n                <fieldset className=\"form__field\">\r\n                    <input\r\n                        ref={avatarUrlRef}\r\n                        name=\"avatar\"\r\n                        placeholder=\"Ссылка на аватар\"\r\n                        className=\"form__input form__input_url\"\r\n                        type=\"url\"\r\n                        id=\"url-input\"\r\n                        required\r\n                    />\r\n                    <span className='form__input-error' id='url-input-error'></span>\r\n                </fieldset>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const nameRef = React.useRef();\r\n    const linkRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            name: nameRef.current.value,\r\n            link: linkRef.current.value\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            title=\"Новое место\"\r\n            name=\"add-cards\"\r\n            buttonName=\"Создать\"\r\n            children={\r\n                <fieldset className=\" form__field\">\r\n                    <input\r\n                        ref={nameRef}\r\n                        name=\"name\"\r\n                        placeholder=\"Название\"\r\n                        className=\"form__input form__input_place\"\r\n                        type=\"text\"\r\n                        id=\"place-input\"\r\n                        required\r\n                        minLength=\"1\"\r\n                        maxLength=\"30\"\r\n                    />\r\n                    <span className='form__input-error' id='place-input-error'></span>\r\n                    <input\r\n                        ref={linkRef}\r\n                        name=\"link\"\r\n                        placeholder=\"Ссылка на картинку\"\r\n                        className=\"form__input form__input_url\"\r\n                        type=\"url\"\r\n                        id=\"url-input\"\r\n                        required\r\n                    />\r\n                    <span className='form__input-error' id='url-input-error'></span>\r\n                </fieldset>}\r\n        />\r\n    )\r\n}\r\nexport default AddPlacePopup;","import React from 'react';\nimport '../blocks/root/root.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport { apiMe, apiCards } from '../utils/Api';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport { CardsContext } from '../context/CardsContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState();\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState();\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: '',\n    avatar: ''\n  });\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    apiMe.getData()\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    apiCards.getData()\n      .then(data => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    function closeAllPopupsByOverlay(e) {\n      if (e.target.classList.contains('popup_opened'))\n        closeAllPopups();\n    }\n    document.addEventListener('mousedown', closeAllPopupsByOverlay);\n\n    function closeAllPopupsByEsc(e) {\n      if (e.key === 'Escape')\n        closeAllPopups();\n    }\n    document.addEventListener('keydown', closeAllPopupsByEsc);\n\n    return () => {\n      document.removeEventListener('mousedown', closeAllPopupsByOverlay);\n      document.removeEventListener('keydown', closeAllPopupsByEsc);\n    }\n  });\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(values) {\n    apiMe.editProfile(values)\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(url) {\n    apiMe.changeAvatar(url.avatar)\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(values) {\n    apiCards.addCard(values)\n      .then(newCard => setCards([...cards, newCard]))\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    (isLiked ? apiCards.deleteLike(card._id) : apiCards.putLike(card._id))\n      .then(newCard => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    apiCards.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(item => item._id === card._id ? '' : item);\n        setCards(newCards);\n      }\n      );\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CardsContext.Provider value={cards}>\n        <div className=\"root\">\n          <div className=\"page\">\n            <Header />\n            <Main\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              onCardClick={handleCardClick}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              setCards={setCards}\n            />\n            <Footer />\n          </div>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          {/* <PopupWithForm title=\"Вы уверены?\" name=\"delete-cards\" buttonName=\"Да\" /> */}\n          <ImagePopup\n            card={selectedCard}\n            link={selectedCard.link}\n            name={selectedCard.name}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </CardsContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}